/*
 * This file is generated by jOOQ.
 */
package de.tum.jk.orm.pojos.unischema;


import de.tum.jk.orm.pojos.unischema.tables.Assistenten;
import de.tum.jk.orm.pojos.unischema.tables.Hoeren;
import de.tum.jk.orm.pojos.unischema.tables.Professoren;
import de.tum.jk.orm.pojos.unischema.tables.Pruefen;
import de.tum.jk.orm.pojos.unischema.tables.Studenten;
import de.tum.jk.orm.pojos.unischema.tables.Voraussetzen;
import de.tum.jk.orm.pojos.unischema.tables.Vorlesungen;
import de.tum.jk.orm.pojos.unischema.tables.records.AssistentenRecord;
import de.tum.jk.orm.pojos.unischema.tables.records.HoerenRecord;
import de.tum.jk.orm.pojos.unischema.tables.records.ProfessorenRecord;
import de.tum.jk.orm.pojos.unischema.tables.records.PruefenRecord;
import de.tum.jk.orm.pojos.unischema.tables.records.StudentenRecord;
import de.tum.jk.orm.pojos.unischema.tables.records.VoraussetzenRecord;
import de.tum.jk.orm.pojos.unischema.tables.records.VorlesungenRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>unischema</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AssistentenRecord> KEY_ASSISTENTEN_PRIMARY = UniqueKeys0.KEY_ASSISTENTEN_PRIMARY;
    public static final UniqueKey<HoerenRecord> KEY_HOEREN_PRIMARY = UniqueKeys0.KEY_HOEREN_PRIMARY;
    public static final UniqueKey<ProfessorenRecord> KEY_PROFESSOREN_PRIMARY = UniqueKeys0.KEY_PROFESSOREN_PRIMARY;
    public static final UniqueKey<ProfessorenRecord> KEY_PROFESSOREN_RAUM = UniqueKeys0.KEY_PROFESSOREN_RAUM;
    public static final UniqueKey<PruefenRecord> KEY_PRUEFEN_PRIMARY = UniqueKeys0.KEY_PRUEFEN_PRIMARY;
    public static final UniqueKey<StudentenRecord> KEY_STUDENTEN_PRIMARY = UniqueKeys0.KEY_STUDENTEN_PRIMARY;
    public static final UniqueKey<VoraussetzenRecord> KEY_VORAUSSETZEN_PRIMARY = UniqueKeys0.KEY_VORAUSSETZEN_PRIMARY;
    public static final UniqueKey<VorlesungenRecord> KEY_VORLESUNGEN_PRIMARY = UniqueKeys0.KEY_VORLESUNGEN_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AssistentenRecord> KEY_ASSISTENTEN_PRIMARY = Internal.createUniqueKey(Assistenten.ASSISTENTEN, "KEY_Assistenten_PRIMARY", Assistenten.ASSISTENTEN.PERSNR);
        public static final UniqueKey<HoerenRecord> KEY_HOEREN_PRIMARY = Internal.createUniqueKey(Hoeren.HOEREN, "KEY_hoeren_PRIMARY", Hoeren.HOEREN.MATRNR, Hoeren.HOEREN.VORLNR);
        public static final UniqueKey<ProfessorenRecord> KEY_PROFESSOREN_PRIMARY = Internal.createUniqueKey(Professoren.PROFESSOREN, "KEY_Professoren_PRIMARY", Professoren.PROFESSOREN.PERSNR);
        public static final UniqueKey<ProfessorenRecord> KEY_PROFESSOREN_RAUM = Internal.createUniqueKey(Professoren.PROFESSOREN, "KEY_Professoren_Raum", Professoren.PROFESSOREN.RAUM);
        public static final UniqueKey<PruefenRecord> KEY_PRUEFEN_PRIMARY = Internal.createUniqueKey(Pruefen.PRUEFEN, "KEY_pruefen_PRIMARY", Pruefen.PRUEFEN.MATRNR, Pruefen.PRUEFEN.VORLNR);
        public static final UniqueKey<StudentenRecord> KEY_STUDENTEN_PRIMARY = Internal.createUniqueKey(Studenten.STUDENTEN, "KEY_Studenten_PRIMARY", Studenten.STUDENTEN.MATRNR);
        public static final UniqueKey<VoraussetzenRecord> KEY_VORAUSSETZEN_PRIMARY = Internal.createUniqueKey(Voraussetzen.VORAUSSETZEN, "KEY_voraussetzen_PRIMARY", Voraussetzen.VORAUSSETZEN.VORGAENGER, Voraussetzen.VORAUSSETZEN.NACHFOLGER);
        public static final UniqueKey<VorlesungenRecord> KEY_VORLESUNGEN_PRIMARY = Internal.createUniqueKey(Vorlesungen.VORLESUNGEN, "KEY_Vorlesungen_PRIMARY", Vorlesungen.VORLESUNGEN.VORLNR);
    }
}
