/*
 * This file is generated by jOOQ.
 */
package de.tum.jk.orm.pojos.unischema.tables;


import de.tum.jk.orm.pojos.unischema.Indexes;
import de.tum.jk.orm.pojos.unischema.Keys;
import de.tum.jk.orm.pojos.unischema.Unischema;
import de.tum.jk.orm.pojos.unischema.tables.records.AssistentenRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Assistenten extends TableImpl<AssistentenRecord> {

    private static final long serialVersionUID = 1013726626;

    /**
     * The reference instance of <code>unischema.Assistenten</code>
     */
    public static final Assistenten ASSISTENTEN = new Assistenten();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssistentenRecord> getRecordType() {
        return AssistentenRecord.class;
    }

    /**
     * The column <code>unischema.Assistenten.PersNr</code>.
     */
    public final TableField<AssistentenRecord, Integer> PERSNR = createField("PersNr", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>unischema.Assistenten.Name</code>.
     */
    public final TableField<AssistentenRecord, String> NAME = createField("Name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>unischema.Assistenten.Fachgebiet</code>.
     */
    public final TableField<AssistentenRecord, String> FACHGEBIET = createField("Fachgebiet", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>unischema.Assistenten.Boss</code>.
     */
    public final TableField<AssistentenRecord, Integer> BOSS = createField("Boss", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>unischema.Assistenten</code> table reference
     */
    public Assistenten() {
        this(DSL.name("Assistenten"), null);
    }

    /**
     * Create an aliased <code>unischema.Assistenten</code> table reference
     */
    public Assistenten(String alias) {
        this(DSL.name(alias), ASSISTENTEN);
    }

    /**
     * Create an aliased <code>unischema.Assistenten</code> table reference
     */
    public Assistenten(Name alias) {
        this(alias, ASSISTENTEN);
    }

    private Assistenten(Name alias, Table<AssistentenRecord> aliased) {
        this(alias, aliased, null);
    }

    private Assistenten(Name alias, Table<AssistentenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Assistenten(Table<O> child, ForeignKey<O, AssistentenRecord> key) {
        super(child, key, ASSISTENTEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Unischema.UNISCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASSISTENTEN_BOSS, Indexes.ASSISTENTEN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssistentenRecord> getPrimaryKey() {
        return Keys.KEY_ASSISTENTEN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssistentenRecord>> getKeys() {
        return Arrays.<UniqueKey<AssistentenRecord>>asList(Keys.KEY_ASSISTENTEN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Assistenten as(String alias) {
        return new Assistenten(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Assistenten as(Name alias) {
        return new Assistenten(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Assistenten rename(String name) {
        return new Assistenten(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Assistenten rename(Name name) {
        return new Assistenten(name, null);
    }
}
