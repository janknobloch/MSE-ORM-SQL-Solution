/*
 * This file is generated by jOOQ.
 */
package de.tum.jk.orm.pojos.unischema.tables.records;


import de.tum.jk.orm.pojos.unischema.tables.Pruefen;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PruefenRecord extends UpdatableRecordImpl<PruefenRecord> implements Record4<Integer, Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = 1832270568;

    /**
     * Setter for <code>unischema.pruefen.MatrNr</code>.
     */
    public void setMatrnr(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>unischema.pruefen.MatrNr</code>.
     */
    public Integer getMatrnr() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>unischema.pruefen.VorlNr</code>.
     */
    public void setVorlnr(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>unischema.pruefen.VorlNr</code>.
     */
    public Integer getVorlnr() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>unischema.pruefen.PersNr</code>.
     */
    public void setPersnr(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>unischema.pruefen.PersNr</code>.
     */
    public Integer getPersnr() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>unischema.pruefen.Note</code>.
     */
    public void setNote(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>unischema.pruefen.Note</code>.
     */
    public BigDecimal getNote() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Pruefen.PRUEFEN.MATRNR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Pruefen.PRUEFEN.VORLNR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Pruefen.PRUEFEN.PERSNR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Pruefen.PRUEFEN.NOTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getMatrnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getVorlnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getPersnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getNote();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getMatrnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getVorlnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPersnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getNote();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PruefenRecord value1(Integer value) {
        setMatrnr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PruefenRecord value2(Integer value) {
        setVorlnr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PruefenRecord value3(Integer value) {
        setPersnr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PruefenRecord value4(BigDecimal value) {
        setNote(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PruefenRecord values(Integer value1, Integer value2, Integer value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PruefenRecord
     */
    public PruefenRecord() {
        super(Pruefen.PRUEFEN);
    }

    /**
     * Create a detached, initialised PruefenRecord
     */
    public PruefenRecord(Integer matrnr, Integer vorlnr, Integer persnr, BigDecimal note) {
        super(Pruefen.PRUEFEN);

        set(0, matrnr);
        set(1, vorlnr);
        set(2, persnr);
        set(3, note);
    }
}
