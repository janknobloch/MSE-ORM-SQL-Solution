/*
 * This file is generated by jOOQ.
 */
package de.tum.jk.orm.pojos.unischema.tables.records;


import de.tum.jk.orm.pojos.unischema.tables.Studenten;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentenRecord extends UpdatableRecordImpl<StudentenRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 998343187;

    /**
     * Setter for <code>unischema.Studenten.MatrNr</code>.
     */
    public void setMatrnr(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>unischema.Studenten.MatrNr</code>.
     */
    public Integer getMatrnr() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>unischema.Studenten.Name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>unischema.Studenten.Name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>unischema.Studenten.Semester</code>.
     */
    public void setSemester(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>unischema.Studenten.Semester</code>.
     */
    public Integer getSemester() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Studenten.STUDENTEN.MATRNR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Studenten.STUDENTEN.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Studenten.STUDENTEN.SEMESTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getMatrnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSemester();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getMatrnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSemester();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentenRecord value1(Integer value) {
        setMatrnr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentenRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentenRecord value3(Integer value) {
        setSemester(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentenRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentenRecord
     */
    public StudentenRecord() {
        super(Studenten.STUDENTEN);
    }

    /**
     * Create a detached, initialised StudentenRecord
     */
    public StudentenRecord(Integer matrnr, String name, Integer semester) {
        super(Studenten.STUDENTEN);

        set(0, matrnr);
        set(1, name);
        set(2, semester);
    }
}
